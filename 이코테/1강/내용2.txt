* 자료형
모든 프로그래밍은 결구 데이터를 다루는 행위입니다.

1) 정수형은 정수를 다루는 자료형입니다.
양의 정수, 음의 정수, 0이 포함됩니다.

2) 실수형은 소수점 아래의 데이터를 포함하는 수 자료형입니다.
변수에 소수점을 붙인 수를 대입하면 실수형 변수로 처리됩니다.
소수부가 0이거나, 정수부가 0인 소수는 0을 생략하고 작성할 수 있습니다.

3) 지수표현 방식
e나 E 다음에 오는 수는 10의 지수부를 의미합니다.
1e9이면 10의 9제곱(1,000,000,000)입니다.
최댓값이 10억 미만이면 무한(INF)의 값으로 1e9를 이용할 수 있습니다.

* 컴퓨터 시스템은 실수 정보를 표현하는 정확도에 한계를 가집니다.

실수의 원하는 값은 round() 함수를 통해 얻는 것이 좋습니다.

* print(a ** 0.5) //제곱근


** 4) 리스트 자료형
여러 개의 데이터를 연속적으로 담아 처리하기 위해 사용하는 자료형.
배열 혹은 테이블이라고도 불립니다.
대괄호 []에 넣어 원소를 초기화하며, 쉼표로 구분합니다.
list() , []로 비어있는 리스트를 선언합니다.
인덱스는 0부터 시작합니다.

* 인덱싱 : 리스트의 특정한 원소에 접근하는 것
양의 정수와 음의 정수 모두 사용
음의 정수는 원소를 거꾸로 탐색

* 슬라이싱 : 연속적인 위치를 갖는 원소들을 가져올 때 사용.
대괄호 안에 : 을 넣어 시작 인덱스와 끝 인덱스 설정
끝 인덱스는 실제 인덱스보다 1을 더 크게 설정

5) 리스트 컴프리헨션
대괄호 안에 조건문과 반복문을 사용해 리스트를 초기화.

N X M 크기의 2차원 리스트 한 번에 초기화
array = [[0] * m for _ in range(n)]

append(), 변수명.append(), O(1)
sort(), 변수명.sort(), O(NlogN)
       , 변수명.sort(reverse=True), O(NlogN)
reverse(), 변수명.reverse(),	O(N)
insert(), insert(삽입할 위치 인덱스, 삽입할 값), O(N)
count(), 변수명.count(특정 값), O(N)
remove(), 변수명.remove(특정 값), O(N)


6) 문자열 자료형
초기화 ", '


** 7) 튜플 자료형
튜플은 한 번 선언된 값을 변경할 수 없습니다.
()를 이용합니다.
리스트에 비해 공간 효율적입니다.
* 서로 다른 성질의 데이터를 묶어서 관리할 때
* 데이터의 나열을 해싱의 키 값으로
사용합니다.


** 8) 사전 자료형
키와 값의 쌍을 데이터로 가지는 자료형
'변경 불가능한 자료형'을 키로 사용
데이터의 조회 및 수정에 O(1) 처리

keys() 함수 : 키 데이터만 뽑아서 리스트로 이용
values() 함수 : 값 데이터만 뽑아서 리스트로 이용


** 9) 집합 자료형
중복 허용 X
순서 X
리스트 혹은 문자열을 이용해 set() 함수로 초기화
{}안에 ,로 구분
데이터 조회 및 수정에 있어 O(1)의 처리

* 집합 자료형 연산
a = set([1, 2, 3, 4, 5])
b = {3, 4, 5, 6, 7}

print(a | b)

print(a & b)

print(a - b)

* 집합 자료형 관련 함수
data = set([1, 2, 3])
print(data)

data.add(4)
print(data)

data.update([5, 6])
print(data)

data.remove(3)
print(data)

사전 자료형과 집합 자료형의 특징
* 리스트나 튜플은 순서가 있음
* 사전 자료형과 집합 자료형은 순서가 없음